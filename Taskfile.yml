version: '3'

vars:
  PACKAGE_SRC_DIR: flowdapt

  # Docker specific variables
  DOCKER_BUILDKIT: 1
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPOSITORY: emergentmethods/flowdapt
  IMAGE_NAME: "{{.IMAGE_REGISTRY}}/{{.IMAGE_REPOSITORY}}"
  IMAGE_TAG: local
  DOCKER_BUILD_ARGS: ""
  PYTHON_VERSION: 3.11


tasks:
  # ---------------------

  # Linting
  lint:
    cmds:
      - flake8 {{.PACKAGE_SRC_DIR}}

  # Run unit tests
  unit-tests:
    cmds:
      - coverage run -m pytest --junitxml=report.xml
      - coverage report
      - coverage xml
      - coverage html -d coverage-report

  # Build the documentation
  build-docs:
    cmds:
      - cp openapi.json docs/reference/api/openapi.json
      - mkdocs build

  run-docs:
    cmds:
      - mkdocs serve

  # ---------------------

  # Build the docs image
  build-docker-docs:
    requires:
      vars: [
        IMAGE_NAME,
        IMAGE_TAG,
        PYTHON_VERSION,
      ]
    cmds:
      - docker build -f docker/docs.Dockerfile {{.DOCKER_BUILD_ARGS}} --build-arg PYTHON_VERSION={{.PYTHON_VERSION}} -t {{.IMAGE_NAME}}:docs-{{.IMAGE_TAG}} -t {{.IMAGE_NAME}}:docs-latest .

  # Build the base image
  build-docker-base:
    requires:
      vars: [
        IMAGE_NAME,
        IMAGE_TAG,
        PYTHON_VERSION,
      ]
    cmds:
      - docker build -f docker/base.Dockerfile {{.DOCKER_BUILD_ARGS}} --build-arg PYTHON_VERSION={{.PYTHON_VERSION}} -t {{.IMAGE_NAME}}:{{.IMAGE_TAG}} .

  # Build the full image, including flowml, the openmeteo plugin and build dependencies
  build-docker-full:
    requires:
      vars: [
        IMAGE_NAME,
        IMAGE_TAG,
        PYTHON_VERSION,
      ]
    cmds:
      - docker build -f docker/complete.Dockerfile {{.DOCKER_BUILD_ARGS}} --build-arg PYTHON_VERSION={{.PYTHON_VERSION}} --build-arg BASE_IMAGE={{.IMAGE_NAME}}:{{.IMAGE_TAG}} -t {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-full .

  # Build the gpu image with CUDA support on top of the full image
  build-docker-gpu:
    requires:
      vars: [
        IMAGE_NAME,
        IMAGE_TAG,
        PYTHON_VERSION,
      ]
    cmds:
      - docker build -f docker/gpu.Dockerfile {{.DOCKER_BUILD_ARGS}} --build-arg PYTHON_VERSION={{.PYTHON_VERSION}} --build-arg BASE_IMAGE={{.IMAGE_NAME}}:{{.IMAGE_TAG}} -t {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-gpu .
      # - docker build -f docker/gpu.Dockerfile {{.DOCKER_BUILD_ARGS}} --build-arg PYTHON_VERSION={{.PYTHON_VERSION}} --build-arg BASE_IMAGE={{.IMAGE_NAME}}:{{.IMAGE_TAG}}-full -t {{.IMAGE_NAME}}:{{.IMAGE_TAG}}-full-gpu .